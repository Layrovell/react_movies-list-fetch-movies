{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","api/getMovie.js","components/FindMovie/FindMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","movie","key","imdbId","getMovie","query","a","fetch","response","json","FindMovie","props","useState","setQuery","setMovie","isValidUrl","setIsValidUrl","moviePreview","setMoviePreview","buttonDisabled","setButtonDisabled","prevQuery","usePrevious","useEffect","find","newMovie","Response","Title","Plot","Poster","imdbID","htmlFor","value","onChange","e","target","type","id","placeholder","onClick","disabled","addMovie","App","data","setMovies","some","ReactDOM","render","document","getElementById"],"mappings":"ixEAIaA,G,kBAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,IAAUC,mBAAV,MAAwB,GAAxB,EAA4BC,EAA5B,EAA4BA,OAAQC,EAApC,EAAoCA,QAApC,OACvB,yBAAKC,UAAU,QACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,iBAChB,yBACEC,IAAKH,EACLI,IAAI,gBAIV,yBAAKF,UAAU,gBACb,yBAAKA,UAAU,SACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,kBAChB,yBACEC,IAAI,wBACJC,IAAI,WAIV,yBAAKF,UAAU,iBACb,uBAAGA,UAAU,cAAcJ,KAI/B,yBAAKI,UAAU,WACZH,EACD,6BACA,uBAAGM,KAAMJ,GAAT,aC3BKK,EAAa,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAH,OACxB,yBAAKL,UAAU,UACZK,EAAOC,KAAI,SAAAC,GAAK,OACf,kBAAC,EAAD,eAAWC,IAAKD,EAAME,QAAYF,S,uCCN3BG,EAAQ,uCAAG,WAAMC,GAAN,eAAAC,EAAA,sEACCC,MAAM,GAAD,OAHrB,+CAGqB,OAAUF,IADhB,cAChBG,EADgB,yBAGfA,EAASC,QAHM,2CAAH,sDCKRC,EAAY,SAACC,GAAW,IAAD,EACRC,mBAAS,IADD,mBAC3BP,EAD2B,KACpBQ,EADoB,OAERD,mBAAS,IAFD,mBAE3BX,EAF2B,KAEpBa,EAFoB,OAGEF,oBAAS,GAHX,mBAG3BG,EAH2B,KAGfC,EAHe,OAIMJ,oBAAS,GAJf,mBAI3BK,EAJ2B,KAIbC,EAJa,OAKUN,oBAAS,GALnB,mBAK3BO,EAL2B,KAKXC,EALW,KAM5BC,EAAYC,YAAYjB,GAE9BkB,qBAAU,WAINH,GAHGf,GAMDA,IAAUgB,GACZL,GAAc,KAEf,CAACX,IAEJ,IAIMmB,EAAI,uCAAG,4BAAAlB,EAAA,sEACYF,EAASC,GADrB,UAGe,WAFpBoB,EADK,QAGEC,SAHF,uBAITV,GAAc,GACdE,GAAgB,GALP,0BAUXJ,EAAS,CACPxB,MAAOmC,EAASE,MAChBpC,YAAakC,EAASG,KACtBpC,OAAQiC,EAASI,OACjBpC,QAAQ,6BAAD,OAA+BgC,EAASK,QAC/C3B,OAAQsB,EAASK,SAEnBZ,GAAgB,GAChBF,GAAc,GAlBH,4CAAH,qDAiCV,OACE,oCACE,0BAAMtB,UAAU,cACd,yBAAKA,UAAU,SACb,2BAAOA,UAAU,QAAQqC,QAAQ,eAAjC,eAIA,yBAAKrC,UAAU,WACb,2BACEsC,MAAO3B,EACP4B,SAhDU,SAACC,GACrBrB,EAASqB,EAAEC,OAAOH,QAgDRI,KAAK,OACLC,GAAG,cACHC,YAAY,0BACZ5C,UAAS,gBAAWqB,EAAa,YAAc,OAIlDA,EACC,uBAAGrB,UAAU,kBAAb,wCAGE,IAGN,yBAAKA,UAAU,oBACb,yBAAKA,UAAU,WACb,4BACE6C,QAASf,EACTY,KAAK,SACL1C,UAAU,mBAHZ,iBASF,yBAAKA,UAAU,WACb,4BACE8C,SAAUrB,EACViB,KAAK,SACL1C,UAAU,oBACV6C,QAtDQ,WACblC,GAMLM,EAAM8B,SAASxC,GACfY,EAAS,IACTK,GAAgB,IAPdF,GAAc,KAgDR,sBAYLC,GACC,yBAAKvB,UAAU,aACb,wBAAIA,UAAU,SAAd,WACA,kBAAC,EAAcO,M,OC/GZyC,EAAM,WAAO,IAAD,EACK9B,mBAAS+B,GADd,mBAChB5C,EADgB,KACR6C,EADQ,KAWvB,OACE,yBAAKlD,UAAU,QACb,yBAAKA,UAAU,gBACb,kBAAC,EAAD,CAAYK,OAAQA,KAEtB,yBAAKL,UAAU,WACb,kBAAC,EAAD,CAAW+C,SAdA,SAAChB,GACZ1B,EAAO8C,MAAK,SAAA5C,GAAK,OAAKA,EAAME,SAAWsB,EAAStB,WAIpDyC,EAAU,GAAD,mBAAK7C,GAAL,CAAa0B,WCT1BqB,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.99f4fe80.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\nimport PropTypes from 'prop-types';\n\nexport const MovieCard = ({ title, description = '', imgUrl, imdbUrl }) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n","import React from 'react';\nimport './MoviesList.scss';\nimport PropTypes from 'prop-types';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      imdbId: PropTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n};\n","const URL = `https://www.omdbapi.com/?apikey=85d016e4&t=`;\n\nexport const getMovie = async(query) => {\n  const response = await fetch(`${URL}${query}`);\n\n  return response.json();\n};\n","import React, { useState, useEffect } from 'react';\nimport './FindMovie.scss';\nimport PropTypes from 'prop-types';\nimport { usePrevious } from 'react-hanger';\nimport { MovieCard } from '../MovieCard';\nimport { getMovie } from '../../api/getMovie';\n\nexport const FindMovie = (props) => {\n  const [query, setQuery] = useState('');\n  const [movie, setMovie] = useState({});\n  const [isValidUrl, setIsValidUrl] = useState(false);\n  const [moviePreview, setMoviePreview] = useState(false);\n  const [buttonDisabled, setButtonDisabled] = useState(true);\n  const prevQuery = usePrevious(query);\n\n  useEffect(() => {\n    if (!query) {\n      setButtonDisabled(true);\n    } else {\n      setButtonDisabled(false);\n    }\n\n    if (query !== prevQuery) {\n      setIsValidUrl(false);\n    }\n  }, [query]);\n\n  const onHandleInput = (e) => {\n    setQuery(e.target.value);\n  };\n\n  const find = async() => {\n    const newMovie = await getMovie(query);\n\n    if (newMovie.Response === 'False') {\n      setIsValidUrl(true);\n      setMoviePreview(false);\n\n      return;\n    }\n\n    setMovie({\n      title: newMovie.Title,\n      description: newMovie.Plot,\n      imgUrl: newMovie.Poster,\n      imdbUrl: `https://www.imdb.com/title${newMovie.imdbID}`,\n      imdbId: newMovie.imdbID,\n    });\n    setMoviePreview(true);\n    setIsValidUrl(false);\n  };\n\n  const onAddButton = () => {\n    if (!query) {\n      setIsValidUrl(true);\n\n      return;\n    }\n\n    props.addMovie(movie);\n    setQuery('');\n    setMoviePreview(false);\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\">\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              value={query}\n              onChange={onHandleInput}\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={`input ${isValidUrl ? 'is-danger' : ''}`}\n            />\n          </div>\n\n          {isValidUrl ? (\n            <p className=\"help is-danger\">\n              Can&apos;t find a movie with such a title\n            </p>\n          ) : ''}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              onClick={find}\n              type=\"button\"\n              className=\"button is-light\"\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              disabled={buttonDisabled}\n              type=\"button\"\n              className=\"button is-primary\"\n              onClick={onAddButton}\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      {moviePreview && (\n        <div className=\"container\">\n          <h2 className=\"title\">Preview</h2>\n          <MovieCard {...movie} />\n        </div>\n      )}\n    </>\n  );\n};\n\nFindMovie.propTypes = {\n  addMovie: PropTypes.func.isRequired,\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport data from './api/movies.json';\n\nexport const App = () => {\n  const [movies, setMovies] = useState(data);\n\n  const addMovie = (newMovie) => {\n    if (movies.some(movie => (movie.imdbId === newMovie.imdbId))) {\n      return;\n    }\n\n    setMovies([...movies, newMovie]);\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <FindMovie addMovie={addMovie} />\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}